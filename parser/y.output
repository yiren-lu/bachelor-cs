Grammar

    0 $accept: S $end

    1 S: E '\n'

    2 E: E '+' T
    3  | E '-' T
    4  | T

    5 T: T '*' F
    6  | T '/' F
    7  | F

    8 F: '(' E ')'
    9  | NUM


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'(' (40) 8
')' (41) 8
'*' (42) 5
'+' (43) 2
'-' (45) 3
'/' (47) 6
error (256)
NUM (258) 9


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
S (12)
    on left: 1, on right: 0
E (13)
    on left: 2 3 4, on right: 1 2 3 8
T (14)
    on left: 5 6 7, on right: 2 3 4 5 6
F (15)
    on left: 8 9, on right: 5 6 7


State 0

    0 $accept: . S $end

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    S  go to state 3
    E  go to state 4
    T  go to state 5
    F  go to state 6


State 1

    9 F: NUM .

    $default  reduce using rule 9 (F)


State 2

    8 F: '(' . E ')'

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    E  go to state 7
    T  go to state 5
    F  go to state 6


State 3

    0 $accept: S . $end

    $end  shift, and go to state 8


State 4

    1 S: E . '\n'
    2 E: E . '+' T
    3  | E . '-' T

    '\n'  shift, and go to state 9
    '+'   shift, and go to state 10
    '-'   shift, and go to state 11


State 5

    4 E: T .
    5 T: T . '*' F
    6  | T . '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 4 (E)


State 6

    7 T: F .

    $default  reduce using rule 7 (T)


State 7

    2 E: E . '+' T
    3  | E . '-' T
    8 F: '(' E . ')'

    '+'  shift, and go to state 10
    '-'  shift, and go to state 11
    ')'  shift, and go to state 14


State 8

    0 $accept: S $end .

    $default  accept


State 9

    1 S: E '\n' .

    $default  reduce using rule 1 (S)


State 10

    2 E: E '+' . T

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    T  go to state 15
    F  go to state 6


State 11

    3 E: E '-' . T

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    T  go to state 16
    F  go to state 6


State 12

    5 T: T '*' . F

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    F  go to state 17


State 13

    6 T: T '/' . F

    NUM  shift, and go to state 1
    '('  shift, and go to state 2

    F  go to state 18


State 14

    8 F: '(' E ')' .

    $default  reduce using rule 8 (F)


State 15

    2 E: E '+' T .
    5 T: T . '*' F
    6  | T . '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 2 (E)


State 16

    3 E: E '-' T .
    5 T: T . '*' F
    6  | T . '/' F

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 3 (E)


State 17

    5 T: T '*' F .

    $default  reduce using rule 5 (T)


State 18

    6 T: T '/' F .

    $default  reduce using rule 6 (T)
